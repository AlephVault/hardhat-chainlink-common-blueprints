// SPDX-License-Identifier: MIT
pragma solidity #SOLIDITY_VERSION#;

import "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol";

/**
 * This is not an actual contract implementation but a stub, useful to refer
 * remotely (externally) deployed contracts satisfying AggregatorV3Interface.
 */
contract #SCRIPT_NAME# is AggregatorV3Interface {
    function decimals() external view returns (uint8) { return 0; }

    function description() external view returns (string memory) { return ""; }

    function version() external view returns (uint256) { return 0; }

    function getRoundData(
        uint80 _roundId
    )
    external
    view
    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound) {
        return (0, 0, 0, 0, 0);
    }

    function latestRoundData()
    external
    view
    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound) {
        return (0, 0, 0, 0, 0);
    }
}
